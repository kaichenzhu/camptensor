version: '3.7'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn server.wsgi:application --bind 0.0.0.0:8000 --timeout 300
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/mediafiles
      - ./app/:/home/app/web/
      - /root/data:/root/data
      - /root/camptensor-analyzer:/root/camptensor-analyzer
      - /root/nltk_data:/usr/local/nltk_data
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    restart: always
    depends_on:
      - db
      - redis
  db:
    image: postgres:12.0-alpine
    command: postgres -c 'max_connections=300'
    volumes:
      - postgre_volume:/var/lib/postgresql/data/
    ports: 
      - "5432:5432"
    env_file:
      - ./.env.prod
    restart: always
  redis:
    image: redis:5.0-alpine3.12
    command: redis-server /etc/redis/redis.conf
    volumes:
      - redis_volume:/redis/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    ports: 
      - "6379:6379"
    restart: always
  celery-worker:
    build: ./app
    command: celery -A server worker -P gevent -c 1000 -l info
    volumes:
      - ./app/:/home/app/web/
      - /root/data:/root/data
      - /root/camptensor-analyzer:/root/camptensor-analyzer
      - /root/nltk_data:/usr/local/nltk_data
    env_file:
      - ./.env.prod
    depends_on:
      - web
    restart: always
  celery-scheduler:
    build: ./app
    command: celery -A server beat -l info
    volumes:
      - ./app/:/home/app/web/
      - /root/data:/root/data
      - /root/camptensor-analyzer:/root/camptensor-analyzer
    env_file:
      - ./.env.prod
    depends_on:
      - celery-worker
    restart: always
  flower:
    image: mher/flower:0.9.5
    command: ['flower', '--broker=redis://:tianxiahui@redis:6379/1', '--port=5555', '-l info']
    ports:
      - "5555:5555"
    depends_on:
      - redis
    restart: always
  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx-certbot/data/certbot/conf:/etc/letsencrypt
  #     - ./nginx-certbot/data/certbot/www:/var/www/certbot
  #   depends_on:
  #     - nginx
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./nginx-certbot/data/nginx:/etc/nginx/conf.d
      - ./nginx-certbot/data/certbot/conf:/etc/letsencrypt
      - ./nginx-certbot/data/certbot/www:/var/www/certbot
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/mediafiles
    ports:
      - 80:80
      - 443:443
    links:
      - web
    depends_on:
      - web
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
volumes:
  redis_volume:
  postgre_volume:
  static_volume:
  media_volume: